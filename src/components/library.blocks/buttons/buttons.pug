mixin radio-buttons(options)
  each val in options.item
    .radio-button
      if val.checked
        input(class="radio-button__custom" type="radio" name=val.name value=val.content checked)
      else 
        input(class="radio-button__custom" type="radio" name=val.name value=val.content)       
      label(class="radio-button__label" for=val.content)
        .radio-button__icon-out
          .radio-button__icon-in
        p(class="radio-button__content")= val.content

mixin toggle-button(options)
  each val in options.item
    .radio-button.radio-button_toggle
      if val.checked
        input(class="radio-button__custom radio-button__custom_toggle" type="checkbox" name=val.name value=val.content checked)
      else 
        input(class="radio-button__custom radio-button__custom_toggle" type="checkbox" name=val.name value=val.content)
      label(class="radio-button__label radio-button__label_toggle" for=val.content)
        .radio-button__icon-out.radio-button__icon-out_toggle
          .radio-button__icon-in.radio-button__icon-in_toggle
        p(class="radio-button__content")= val.content

mixin rate-button(options)
  div(class='rate-buttons' data-rate= options.rate)
    - var rated = 0;
        while rated < options.rate
          .rate-buttons__item.rate-buttons__item_colored
          - rated++
    - var unrated = 0;
        while unrated < (5 - options.rate)
          .rate-buttons__item.rate-buttons__item_uncolored
          - unrated++

mixin simple-button(options)
  - var type = options.type
  - var text = options.text
  case type 
    when 'colored'
      button(class='simple-button simple-button_colored')= text  
    when 'uncolored'
      button(class='simple-button simple-button_uncolored')= text
    when 'unborded'
      button(class='simple-button simple-button_unborded')= text
    when 'long'
      button(class='simple-button simple-button_long')= text
    default 
      button(class='simple-button simple-button_colored')= text  


  